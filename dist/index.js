function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}function _arrayWithHoles(a){if(Array.isArray(a))return a}function _objectSpread2(a){for(var b=1;b<arguments.length;b++){var c=null==arguments[b]?{}:arguments[b],d=Object.keys(c);"function"==typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable}))),d.forEach(function(b){_defineProperty(a,b,c[b])})}return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var breakpoints={smallPhone:320,phone:375,tablet:768,desktop:1024,largeDesktop:1440},signRegex=/^[<=>]+/;function throwError(){throw"invalid media-query  :("}function throwBreakPointError(){throw"invalid breakpoint :("}function getBreakPoints(){return breakpoints}function checkValidBreakpoint(a){var b=Object.keys(breakpoints),c=Object.keys(a);return c.every(function(a){return b.includes(a)})}function setBreakPoints(a){var b=checkValidBreakpoint(a);return b?void(breakpoints=_objectSpread2(_objectSpread2({},breakpoints),a)):throwBreakPointError()}function cssinjsMedia(a,b){var c=b?[a,b]:[a];return c.every(checkValid)?"@media ".concat(c.map(convertToQuery).join(" and ")):throwError()}function checkValid(a){var b=parseParam(a),c=_slicedToArray(b,2),d=c[0],e=c[1],f=!!d&&!!breakpoints[e];return f}function parseParam(a){var b=a.match(signRegex)?a.match(signRegex)[0].trim():"",c=a.replace(signRegex,"").trim();return[b,c]}function convertToQuery(a){var b=parseParam(a),c=_slicedToArray(b,2),d=c[0],e=c[1],f=d.includes("="),g=f?breakpoints[e]:breakpoints[e]-1,h="number"==typeof g?"px":"",i=d.includes(">")?"min-width":"max-width";return"(".concat(i,": ").concat(g).concat(h,")")}export default cssinjsMedia;export{getBreakPoints,setBreakPoints};
